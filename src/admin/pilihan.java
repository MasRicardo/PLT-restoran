/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import java.awt.Color;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import server.mysql;

/**
 *
 * @author DELL
 */
public class pilihan extends javax.swing.JFrame {
    private boolean editKategori = false;
    private final mysql db;
    private final Statement stm;
    private ResultSet res;
    private final HashMap<String, Integer> idKategori;
    int dragxmouse;
    int dragymouse;
    /**
     * Creates new form addMenu
     *
     * @throws java.sql.SQLException
     */
    public pilihan() throws SQLException {
        this.setUndecorated(true);
        initComponents();
        this.setBackground(new Color(0,0,0,0));

        this.db = new mysql();
        this.stm = mysql.getConnection().createStatement();
        this.idKategori = new HashMap<String, Integer>();

        setTitle("KELOLA KATEGORI");
        setPreferredSize(new Dimension(5000, 800));
        setResizable(false);
        setLocationRelativeTo(null);
        
        this.updateTable();
        
        headerTitle.setVisible(false);
        nameAlert.setVisible(false);
        editBtn.setVisible(false);
        delBtn.setVisible(false);
        editID.setVisible(false);

        pack();
    }

    private void fillKategoriList() {
        try {
            DefaultTableModel list = (DefaultTableModel) kategoriList.getModel();

            String getMenuList = "SELECT * FROM `foodCategory` ORDER BY `categoryName` ASC";
            this.res = this.stm.executeQuery(getMenuList);

            if (this.res.next()) {
                do {
                    int ID = this.res.getInt("categoryID");
                    String nama = this.res.getString("categoryName");

                    list.addRow(new Object[]{ID, nama});
                } while (this.res.next());
            }
        } catch (SQLException ex) {
            Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateTable() {
        try {
            DefaultTableModel list = (DefaultTableModel) kategoriList.getModel();
            list.setRowCount(0);

            String getMenuList = "SELECT * FROM `foodCategory` ORDER BY `categoryName` ASC";
            this.res = this.stm.executeQuery(getMenuList);

            if (this.res.next()) {
                do {
                    int ID = this.res.getInt("categoryID");
                    String nama = this.res.getString("categoryName");

                    list.addRow(new Object[]{ID, nama});
                } while (this.res.next());
            }
        } catch (SQLException ex) {
            Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userbtn = new javax.swing.JButton();
        menubtn = new javax.swing.JButton();
        pilihanbtn = new javax.swing.JButton();
        status = new javax.swing.JButton();
        menuPanel = new javax.swing.JScrollPane();
        kategoriList = new javax.swing.JTable();
        editID = new javax.swing.JLabel();
        headerTitle = new javax.swing.JLabel();
        editPanel = new javax.swing.JPanel();
        inputNama = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        onscreen = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();
        nameAlert = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tambahkan Kategori Menu");
        getContentPane().setLayout(null);

        userbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/userbtn1.png"))); // NOI18N
        userbtn.setBorderPainted(false);
        userbtn.setContentAreaFilled(false);
        userbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                userbtnMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userbtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userbtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userbtnMouseEntered(evt);
            }
        });
        getContentPane().add(userbtn);
        userbtn.setBounds(20, 110, 270, 80);

        menubtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/menubtn1.png"))); // NOI18N
        menubtn.setBorderPainted(false);
        menubtn.setContentAreaFilled(false);
        menubtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menubtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menubtnMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menubtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menubtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menubtnMouseEntered(evt);
            }
        });
        menubtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menubtnActionPerformed(evt);
            }
        });
        getContentPane().add(menubtn);
        menubtn.setBounds(20, 180, 270, 80);

        pilihanbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/pilihanbtn1.png"))); // NOI18N
        pilihanbtn.setBorderPainted(false);
        pilihanbtn.setContentAreaFilled(false);
        pilihanbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pilihanbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pilihanbtnMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pilihanbtnMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pilihanbtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pilihanbtnMouseEntered(evt);
            }
        });
        getContentPane().add(pilihanbtn);
        pilihanbtn.setBounds(20, 250, 270, 80);

        status.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/status1.png"))); // NOI18N
        status.setBorderPainted(false);
        status.setContentAreaFilled(false);
        status.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statusMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                statusMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                statusMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statusMouseEntered(evt);
            }
        });
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        getContentPane().add(status);
        status.setBounds(20, 320, 270, 69);

        kategoriList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kategoriList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kategoriListMouseClicked(evt);
            }
        });
        menuPanel.setViewportView(kategoriList);
        if (kategoriList.getColumnModel().getColumnCount() > 0) {
            kategoriList.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        getContentPane().add(menuPanel);
        menuPanel.setBounds(330, 320, 430, 440);

        editID.setText("{{editID}}");
        getContentPane().add(editID);
        editID.setBounds(100, 140, 61, 21);

        headerTitle.setText("{{msg}}");
        getContentPane().add(headerTitle);
        headerTitle.setBounds(70, 120, 48, 21);

        editPanel.setBackground(new java.awt.Color(246, 243, 255));

        inputNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNamaActionPerformed(evt);
            }
        });

        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/tambahuser1.png"))); // NOI18N
        addBtn.setBorderPainted(false);
        addBtn.setContentAreaFilled(false);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addBtnMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/edituser1.png"))); // NOI18N
        editBtn.setBorderPainted(false);
        editBtn.setContentAreaFilled(false);
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editBtnMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editBtnMouseEntered(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        delBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/deleteuser1.png"))); // NOI18N
        delBtn.setContentAreaFilled(false);
        delBtn.setDefaultCapable(false);
        delBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                delBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                delBtnMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                delBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                delBtnMouseEntered(evt);
            }
        });
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama:");

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        jLabel1.setText("TAMBAH KATEGORI BARU");

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addComponent(editBtn)
                                .addGap(18, 18, 18)
                                .addComponent(addBtn))
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(delBtn))))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delBtn)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(editPanel);
        editPanel.setBounds(800, 410, 340, 200);

        onscreen.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                onscreenMouseDragged(evt);
            }
        });
        onscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                onscreenMousePressed(evt);
            }
        });
        getContentPane().add(onscreen);
        onscreen.setBounds(20, 20, 1170, 780);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/images/ww.png"))); // NOI18N
        getContentPane().add(bg);
        bg.setBounds(20, 30, 1163, 769);

        nameAlert.setText("{{namaMsg}}");
        getContentPane().add(nameAlert);
        nameAlert.setBounds(60, 90, 85, 21);

        setSize(new java.awt.Dimension(1249, 825));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        if(this.editKategori) {
            addBtn.setText("Tambah");
            inputNama.setText("");
            this.editKategori = false;
            
            editBtn.setVisible(false);
            delBtn.setVisible(false);
        }
        else {
        try {
            String nama = inputNama.getText();

            if (nama.equals("")) {
                inputNama.requestFocus();
                nameAlert.setText("Masukkan nama kategori");
                nameAlert.setVisible(true);
            } else {
                String tambahMenu = "INSERT INTO `foodCategory` VALUES (NULL, '" + nama + "')";
                int tambah = this.stm.executeUpdate(tambahMenu);

                if (tambah > 0) {
                    inputNama.setText("");

                    headerTitle.setText("Kategori baru ditambahkan!");
                    this.updateTable();
                } else {
                    headerTitle.setText("Terjadi kesalahan saat menambahkan kategori. Silahkan ulangi kembali.");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void kategoriListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kategoriListMouseClicked
        try {
            this.editKategori = true;
            addBtn.setText("");
            DefaultTableModel list = (DefaultTableModel) kategoriList.getModel();
            int sel = kategoriList.getSelectedRow();
            String id = list.getValueAt(sel, 0).toString();
            int ID = Integer.parseInt(id);

            editBtn.setVisible(true);
            delBtn.setVisible(true);

            String getData = "SELECT * FROM `foodCategory` WHERE `categoryID` = '" + ID + "'";
            this.res = this.stm.executeQuery(getData);
            if (this.res.next()) {
                String nama = this.res.getString("categoryName");

                inputNama.setText(nama);
                editID.setText(String.valueOf(ID));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kategoriListMouseClicked

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        DefaultTableModel list = (DefaultTableModel) kategoriList.getModel();
        int doHapus = JOptionPane.showConfirmDialog(editPanel, (Object) "Yakin ingin menghapus kategori ini?", "Hapus kategori", 0);

        if (doHapus == 0) {
            try {
                String ID = editID.getText();
                String Hapus = "DELETE FROM `foodCategory` WHERE `categoryID` = '" + ID + "'";
                int hapus = this.stm.executeUpdate(Hapus);

                if (hapus > 0) {
                    headerTitle.setText("Kategori berhasil dihapus");
                    headerTitle.setVisible(true);

                    inputNama.setText("");

                    this.updateTable();
                    addBtn.setVisible(true);
                    delBtn.setVisible(false);
                    editBtn.setVisible(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(this.editKategori) {
                addBtn.setText("");
                this.editKategori = false;
            }
        }
    }//GEN-LAST:event_delBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        DefaultTableModel list = (DefaultTableModel) kategoriList.getModel();
        String ID = editID.getText();

        String nama = inputNama.getText();

        if (nama.equals("")) {
            inputNama.requestFocus();
            nameAlert.setText("Masukkan nama kategori!");
            nameAlert.setVisible(true);
        }
        else {
            if(this.editKategori) {
                addBtn.setText("Tambah");
                this.editKategori = false;
            }
            nameAlert.setVisible(false);
            try {
                String update = "UPDATE `foodCategory` SET `categoryName` = '" + nama + "' WHERE `categoryID` = '" + ID + "'";
                int updateMenu = this.stm.executeUpdate(update);

                if (updateMenu > 0) {
                    headerTitle.setText("Kategori diperbarui!");
                    headerTitle.setVisible(true);

                    this.updateTable();
                } else {
                    headerTitle.setText("Gagal memperbarui menu. Harap ulangi kembali");
                    headerTitle.setVisible(true);
                }

                inputNama.setText("");

                addBtn.setVisible(true);
                editBtn.setVisible(false);
                delBtn.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void inputNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNamaActionPerformed

    private void userbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/userbtn1.png"));
        userbtn.setIcon(b);
    }//GEN-LAST:event_userbtnMousePressed

    private void userbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/userbtn2.png"));
        userbtn.setIcon(b);
    }//GEN-LAST:event_userbtnMouseReleased

    private void userbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMouseClicked
        try {
            new datausers().setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_userbtnMouseClicked

    private void userbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/userbtn1.png"));
        userbtn.setIcon(b);
    }//GEN-LAST:event_userbtnMouseExited

    private void userbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userbtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/userbtn2.png"));
        userbtn.setIcon(b);
    }//GEN-LAST:event_userbtnMouseEntered

    private void menubtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/menubtn1.png"));
        menubtn.setIcon(b);
    }//GEN-LAST:event_menubtnMousePressed

    private void menubtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/menubtn2.png"));
        menubtn.setIcon(b);
    }//GEN-LAST:event_menubtnMouseReleased

    private void menubtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubtnMouseClicked
        try {
            new menu().setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menubtnMouseClicked

    private void menubtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/menubtn1.png"));
        menubtn.setIcon(b);
    }//GEN-LAST:event_menubtnMouseExited

    private void menubtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/menubtn2.png"));
        menubtn.setIcon(b);
    }//GEN-LAST:event_menubtnMouseEntered

    private void menubtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menubtnActionPerformed

    }//GEN-LAST:event_menubtnActionPerformed

    private void pilihanbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihanbtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/pilihanbtn1.png"));
        pilihanbtn.setIcon(b);
    }//GEN-LAST:event_pilihanbtnMousePressed

    private void pilihanbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihanbtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/pilihanbtn2.png"));
        pilihanbtn.setIcon(b);
    }//GEN-LAST:event_pilihanbtnMouseReleased

    private void pilihanbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihanbtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/pilihanbtn1.png"));
        pilihanbtn.setIcon(b);
    }//GEN-LAST:event_pilihanbtnMouseExited

    private void pilihanbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihanbtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/pilihanbtn2.png"));
        pilihanbtn.setIcon(b);
    }//GEN-LAST:event_pilihanbtnMouseEntered

    private void pilihanbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pilihanbtnMouseClicked
        try {
            new pilihan().setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pilihanbtnMouseClicked

    private void onscreenMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onscreenMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - dragxmouse,y-dragymouse);
        System.out.println(x+","+y);
    }//GEN-LAST:event_onscreenMouseDragged

    private void onscreenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onscreenMousePressed
        dragxmouse = evt.getX();
        dragymouse = evt.getY();
    }//GEN-LAST:event_onscreenMousePressed

    private void statusMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/status1.png"));
        status.setIcon(b);
    }//GEN-LAST:event_statusMousePressed

    private void statusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/status2.png"));
        status.setIcon(b);
    }//GEN-LAST:event_statusMouseReleased

    private void statusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseClicked
        try {
            new daftarPesanan().setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_statusMouseClicked

    private void statusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/status1.png"));
        status.setIcon(b);
    }//GEN-LAST:event_statusMouseExited

    private void statusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/status2.png"));
        status.setIcon(b);
    }//GEN-LAST:event_statusMouseEntered

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/tambahuser2.png"));
        addBtn.setIcon(b);
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/tambahuser1.png"));
        addBtn.setIcon(b);
    }//GEN-LAST:event_addBtnMouseExited

    private void addBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/tambahuser1.png"));
        addBtn.setIcon(b);
    }//GEN-LAST:event_addBtnMousePressed

    private void addBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/tambahuser2.png"));
        addBtn.setIcon(b);
    }//GEN-LAST:event_addBtnMouseReleased

    private void editBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/edituser2.png"));
        editBtn.setIcon(b);
    }//GEN-LAST:event_editBtnMouseEntered

    private void editBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/edituser1.png"));
        editBtn.setIcon(b);
    }//GEN-LAST:event_editBtnMouseExited

    private void editBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/edituser1.png"));
        editBtn.setIcon(b);
    }//GEN-LAST:event_editBtnMousePressed

    private void editBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/edituser2.png"));
        editBtn.setIcon(b);
    }//GEN-LAST:event_editBtnMouseReleased

    private void delBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delBtnMouseEntered
        ImageIcon b = new ImageIcon(getClass().getResource("images/deleteuser2.png"));
        delBtn.setIcon(b);
    }//GEN-LAST:event_delBtnMouseEntered

    private void delBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delBtnMouseExited
        ImageIcon b = new ImageIcon(getClass().getResource("images/deleteuser1.png"));
        delBtn.setIcon(b);
    }//GEN-LAST:event_delBtnMouseExited

    private void delBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delBtnMousePressed
        ImageIcon b = new ImageIcon(getClass().getResource("images/deleteuser1.png"));
        delBtn.setIcon(b);
    }//GEN-LAST:event_delBtnMousePressed

    private void delBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delBtnMouseReleased
        ImageIcon b = new ImageIcon(getClass().getResource("images/deleteuser2.png"));
        delBtn.setIcon(b);
    }//GEN-LAST:event_delBtnMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new pilihan().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(pilihan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel bg;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel editID;
    private javax.swing.JPanel editPanel;
    private javax.swing.JLabel headerTitle;
    private javax.swing.JTextField inputNama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable kategoriList;
    private javax.swing.JScrollPane menuPanel;
    private javax.swing.JButton menubtn;
    private javax.swing.JLabel nameAlert;
    private javax.swing.JLabel onscreen;
    private javax.swing.JButton pilihanbtn;
    private javax.swing.JButton status;
    private javax.swing.JButton userbtn;
    // End of variables declaration//GEN-END:variables
}
